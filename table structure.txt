Users table // a user can apply for many jobs
Schema::create('users', function (Blueprint $table) {
    $table->id();
    $table->string("name", 25);
    $table->string("email", 50);
    $table->string("password", 100);
    $table->string("userType", 10)->default("USER");
    $table->text("profile_image_url")->nullable();
    $table->text("profile_image_public_id")->nullable();
    $table->text("resume_pdf_url")->nullable();
    $table->text("resume_pdf_public_id")->nullable();
    $table->string("contact", 15)->nullable();
    $table->enum(
        "gender",
        [
            "MALE",
            "FEMALE",
            "OTHER",
            "NOT_SPECIFIED",
        ]
    )->nullable();
    $table->boolean('is_active')->default(true);
    $table->string("headline", 200)->nullable();
    $table->string("education", 200)->nullable();
    $table->string("interest", 100)->nullable();
    $table->string("hobby", 100)->nullable();
    $table->string("city", 30)->nullable();
    $table->text("about")->nullable();
    $table->string("experience", 200)->nullable();
    $table->boolean('is_email_verified')->default(false);
    $table->string(
        "email_verification_token",
        100
    )->nullable();
    $table->timestamp("email_verified_at")->nullable();
    $table->string(
        "password_reset_token",
        100
    )->nullable();
    $table->timestamp("password_reset_at")->nullable();
    $table->string(
        "password_change_token",
        100
    )->nullable();
    $table->timestamp("password_change_at")->nullable();
    $table->string(
        "email_change_token",
        100
    )->nullable();
    $table->timestamp("email_change_at")->nullable();
    $table->timestamp("last_login_at")->nullable();
    $table->rememberToken();
    $table->timestamps();
});

Companies Table // a company has many jobs
Schema::create('companies', function (Blueprint $table) {
    $table->id();
    $table->boolean('is_verified')->default(false);
    $table->string("userType", 10)->default("COMPANY");
    $table->string('name', 60);
    $table->string('email', 100);
    $table->string('password', 100)->nullable();
    $table->text("profile_image_url")->nullable();
    $table->text("profile_image_public_id")->nullable();
    $table->string('website', 100)->nullable();
    $table->string('city', 100)->nullable();
    $table->string('address', 100)->nullable();
    $table->string('linkedin', 100)->nullable();
    $table->text('description')->nullable();
    $table->boolean('is_email_verified')->default(false);
    $table->string(
        "email_verification_token",
        100
    )->nullable();
    $table->timestamp("email_verified_at")->nullable();
    $table->string(
        "password_reset_token",
        100
    )->nullable();
    $table->timestamp("password_reset_at")->nullable();
    $table->string(
        "password_change_token",
        100
    )->nullable();
    $table->timestamp("password_change_at")->nullable();
    $table->string(
        "email_change_token",
        100
    )->nullable();
    $table->timestamp("email_change_at")->nullable();
    $table->timestamp("last_login_at")->nullable();
    $table->rememberToken();
    $table->timestamps();
});

Admins Table 
Schema::create('admins', function (Blueprint $table) {
    $table->id();
    $table->string("userType", 10)->default("ADMIN");
    $table->string('name', 20);
    $table->string('email', 100);
    $table->string('password', 100)->nullable();
    $table->text("profile_image_url")->nullable();
    $table->text("profile_image_public_id")->nullable();
    $table->boolean('is_email_verified')->default(false);
    $table->string(
        "email_verification_token",
        100
    )->nullable();
    $table->timestamp("email_verified_at")->nullable();
    $table->string(
        "password_reset_token",
        100
    )->nullable();
    $table->timestamp("password_reset_at")->nullable();
    $table->string(
        "password_change_token",
        100
    )->nullable();
    $table->timestamp("password_change_at")->nullable();
    $table->string(
        "email_change_token",
        100
    )->nullable();
    $table->timestamp("email_change_at")->nullable();
    $table->timestamp("last_login_at")->nullable();
    $table->rememberToken();
    $table->timestamps();
});


Profile Categories Table // a profile category has many sub profiles
Schema::create('profile_categories', function (Blueprint $table) {
    $table->id();
    $table->string("name", 100);
    $table->timestamps();
});

Sub Profiles Table // a profile category has many sub profiles and a job has one sub profile
Schema::create('sub_profiles', function (Blueprint $table) {
    $table->id();
    $table->bigInteger("profile_category_id")->unsigned();
    $table->string("name", 100);
    $table->foreign('profile_category_id')->references('id')->on('profile_categories')->onDelete('cascade');
    $table->timestamps();
});

Qualifications Table // a job has many qualifications
Schema::create('qualifications', function (Blueprint $table) {
    $table->id();
    $table->string("name", 100);
    $table->timestamps();
});

Locations Table // a company has many locations
Schema::create('locations', function (Blueprint $table) {
    $table->id();
    $table->string("city", 20);
    $table->string("state", 25)->nullable();
    $table->string("country", 25)->nullable();
    $table->integer("pincode")->nullable();
    $table->timestamps();
});

Jobs Table // a company has many jobs
Schema::create('jobs', function (Blueprint $table) {
    $table->id();
    $table->bigInteger('company_id')->unsigned();
    $table->bigInteger('sub_profile_id')->unsigned();
    $table->tinyInteger("vacancy")->nullable();
    $table->mediumInteger("min_salary")->nullable();
    $table->mediumInteger("max_salary")->nullable();
    $table->text('description')->nullable();
    $table->text('responsibility')->nullable();
    $table->text('benifits_perks')->nullable();
    $table->text('other_benifits')->nullable();
    $table->boolean('is_verified')->default(false);
    $table->boolean('is_featured')->default(false);
    $table->boolean('is_active')->default(true);
    $table->string('keywords')->nullable();
    $table->enum(
        'work_type',
        [
      'REMOTE',
      'ONSITE',
      'HYBRID',
    ]
    )->nullable();
    $table->enum(
        'job_type',
        [
            'Full Time',
'Part Time',
 'Internship',
 'Contract',
 'Freelance',
 'Volunteer',
 'Temporary',
        ]
    )->nullable();
    $table->enum(
        'experience_level',
        [
            'Fresher',
'Experienced',
        ]
    )->nullable();
    $table->enum(
        'experience_type',
        [
      'Any',
      '0-1',
      '1-2',
      '2-3',
      '3-5',
      '5-8',
      '8-10',
      '10+',
    ]
    )->nullable();
    $table->foreign('company_id')->references('id')->on('companies')->onDelete('cascade');
    $table->foreign('sub_profile_id')->references('id')->on('sub_profiles')->onDelete('cascade');
    $table->timestamps();
});

Job Qualifications Table // a job has many qualifications
Schema::create('job_qualifications', function (Blueprint $table) {
    $table->id();
    $table->bigInteger("jobs_id")->unsigned();
    $table->bigInteger("qualifications_id")->unsigned();
    $table->foreign('jobs_id')->references('id')->on('jobs');
    $table->foreign('qualifications_id')->references('id')->on('qualifications');
    $table->timestamps();
});

Job Locations Table // a job has many locations
Schema::create('job_locations', function (Blueprint $table) {
    $table->id();
    $table->bigInteger("jobs_id")->unsigned();
    $table->bigInteger("locations_id")->unsigned();
    $table->foreign('jobs_id')->references('id')->on('jobs');
    $table->foreign('locations_id')->references('id')->on('locations');
    $table->timestamps();
});

Applied Jobs Table // a user can apply for many jobs
Schema::create('applied_jobs', function (Blueprint $table) {
    $table->id();
    $table->foreignId('user_id')->constrained()->onDelete('cascade');
    $table->foreignId('job_id')->constrained()->onDelete('cascade');
    $table->timestamps();
});

Saved Jobs Table // a user can save many jobs
Schema::create('saved_jobs', function (Blueprint $table) {
    $table->id();
    $table->foreignId('user_id')->constrained()->onDelete('cascade');
    $table->foreignId('job_id')->constrained()->onDelete('cascade');
    $table->timestamps();
});

Follows Table // a user can follow many users and companies
Schema::create('follows', function (Blueprint $table) {
    $table->id();
    $table->unsignedBigInteger('user_id');
    $table->unsignedBigInteger('followable_id');
    $table->string('followable_type');
    $table->foreign('user_id')->references('id')->on('users')->onDelete('cascade');
    $table->timestamps();
});

Posts Table // a user and company can create many posts
Schema::create('posts', function (Blueprint $table) {
    $table->id();
    $table->morphs('authorable');
    $table->string('title');
    $table->enum('type', [
        'TEXT',
        'IMAGE',
        'VIDEO',
    ])->default('TEXT');
    $table->text('content');
    $table->string('file')->nullable();
    $table->string('public_id')->nullable();
    $table->timestamps();
});

Comments Table // a user and company can comment on many posts
Schema::create('comments', function (Blueprint $table) {
    $table->id();
    $table->unsignedBigInteger('post_id');
    $table->foreign('post_id')->references('id')->on('posts')->onDelete('cascade');
    $table->morphs('authorable');
    $table->text('content');
    $table->timestamps();
});

Likes Table // a user and company can like many posts and comments
Schema::create('likes', function (Blueprint $table) {
    $table->id();
    $table->morphs('likeable');
    $table->morphs('authorable');
    $table->unique(['likeable_id', 'likeable_type', 'authorable_id', 'authorable_type'], 'likeable_authorable_unique');
    $table->timestamps();
});




CREATE TABLE `users` (
    `id` BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    `name` VARCHAR(25),
    `email` VARCHAR(50),
    `password` VARCHAR(100),
    `userType` VARCHAR(10) DEFAULT 'USER',
    `profile_image_url` TEXT,
    `profile_image_public_id` TEXT,
    `resume_pdf_url` TEXT,
    `resume_pdf_public_id` TEXT,
    `contact` VARCHAR(15),
    `gender` ENUM('MALE', 'FEMALE', 'OTHER', 'NOT_SPECIFIED'),
    `is_active` TINYINT(1) DEFAULT 1,
    `headline` VARCHAR(200),
    `education` VARCHAR(200),
    `interest` VARCHAR(100),
    `hobby` VARCHAR(100),
    `city` VARCHAR(30),
    `about` TEXT,
    `experience` VARCHAR(200),
    `is_email_verified` TINYINT(1) DEFAULT 0,
    `email_verification_token` VARCHAR(100),
    `email_verified_at` TIMESTAMP NULL,
    `password_reset_token` VARCHAR(100),
    `password_reset_at` TIMESTAMP NULL,
    `password_change_token` VARCHAR(100),
    `password_change_at` TIMESTAMP NULL,
    `email_change_token` VARCHAR(100),
    `email_change_at` TIMESTAMP NULL,
    `last_login_at` TIMESTAMP NULL,
    `remember_token` VARCHAR(100),
    `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE `companies` (
    `id` BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    `is_verified` TINYINT(1) DEFAULT 0,
    `userType` VARCHAR(10) DEFAULT 'COMPANY',
    `name` VARCHAR(60),
    `email` VARCHAR(100),
    `password` VARCHAR(100),
    `profile_image_url` TEXT,
    `profile_image_public_id` TEXT,
    `website` VARCHAR(100),
    `city` VARCHAR(100),
    `address` VARCHAR(100),
    `linkedin` VARCHAR(100),
    `description` TEXT,
    `is_email_verified` TINYINT(1) DEFAULT 0,
    `email_verification_token` VARCHAR(100),
    `email_verified_at` TIMESTAMP NULL,
    `password_reset_token` VARCHAR(100),
    `password_reset_at` TIMESTAMP NULL,
    `password_change_token` VARCHAR(100),
    `password_change_at` TIMESTAMP NULL,
    `email_change_token` VARCHAR(100),
    `email_change_at` TIMESTAMP NULL,
    `last_login_at` TIMESTAMP NULL,
    `remember_token` VARCHAR(100),
    `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE `admins` (
    `id` BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    `userType` VARCHAR(10) DEFAULT 'ADMIN',
    `name` VARCHAR(20),
    `email` VARCHAR(100),
    `password` VARCHAR(100),
    `profile_image_url` TEXT,
    `profile_image_public_id` TEXT,
    `is_email_verified` TINYINT(1) DEFAULT 0,
    `email_verification_token` VARCHAR(100),
    `email_verified_at` TIMESTAMP NULL,
    `password_reset_token` VARCHAR(100),
    `password_reset_at` TIMESTAMP NULL,
    `password_change_token` VARCHAR(100),
    `password_change_at` TIMESTAMP NULL,
    `email_change_token` VARCHAR(100),
    `email_change_at` TIMESTAMP NULL,
    `last_login_at` TIMESTAMP NULL,
    `remember_token` VARCHAR(100),
    `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE `profile_categories` (
    `id` BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    `name` VARCHAR(100),
    `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE `sub_profiles` (
    `id` BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    `profile_category_id` BIGINT UNSIGNED,
    `name` VARCHAR(100),
    `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (`profile_category_id`) REFERENCES `profile_categories`(`id`) ON DELETE CASCADE
);

CREATE TABLE `qualifications` (
    `id` BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    `name` VARCHAR(100),
    `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE `locations` (
    `id` BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    `city` VARCHAR(20),
    `state` VARCHAR(25),
    `country` VARCHAR(25),
    `pincode` INT,
    `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE `jobs` (
    `id` BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    `company_id` BIGINT UNSIGNED,
    `sub_profile_id` BIGINT UNSIGNED,
    `vacancy` TINYINT,
    `min_salary` MEDIUMINT,
    `max_salary` MEDIUMINT,
    `description` TEXT,
    `responsibility` TEXT,
    `benifits_perks` TEXT,
    `other_benifits` TEXT,
    `is_verified` TINYINT(1) DEFAULT 0,
    `is_featured` TINYINT(1) DEFAULT 0,
    `is_active` TINYINT(1) DEFAULT 1,
    `keywords` VARCHAR(191),
    `work_type` ENUM('REMOTE', 'ONSITE', 'HYBRID'),
    `job_type` ENUM('Full Time', 'Part Time', 'Internship', 'Contract', 'Freelance', 'Volunteer', 'Temporary'),
    `experience_level` ENUM('Fresher', 'Experienced'),
    `experience_type` ENUM('Any', '0-1', '1-2', '2-3', '3-5', '5-8', '8-10', '10+'),
    `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (`company_id`) REFERENCES `companies`(`id`) ON DELETE CASCADE,
    FOREIGN KEY (`sub_profile_id`) REFERENCES `sub_profiles`(`id`) ON DELETE CASCADE
);

CREATE TABLE `job_qualifications` (
    `id` BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    `jobs_id` BIGINT UNSIGNED,
    `qualifications_id` BIGINT UNSIGNED,
    `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (`jobs_id`) REFERENCES `jobs`(`id`) ON DELETE CASCADE,
    FOREIGN KEY (`qualifications_id`) REFERENCES `qualifications`(`id`) ON DELETE CASCADE
);

CREATE TABLE `job_locations` (
    `id` BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    `jobs_id` BIGINT UNSIGNED,
    `locations_id` BIGINT UNSIGNED,
    `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (`jobs_id`) REFERENCES `jobs`(`id`) ON DELETE CASCADE,
    FOREIGN KEY (`locations_id`) REFERENCES `locations`(`id`) ON DELETE CASCADE
);

CREATE TABLE `applied_jobs` (
    `id` BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    `user_id` BIGINT UNSIGNED,
    `job_id` BIGINT UNSIGNED,
    `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (`user_id`) REFERENCES `users`(`id`) ON DELETE CASCADE,
    FOREIGN KEY (`job_id`) REFERENCES `jobs`(`id`) ON DELETE CASCADE
);

CREATE TABLE `saved_jobs` (
    `id` BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    `user_id` BIGINT UNSIGNED,
    `job_id` BIGINT UNSIGNED,
    `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (`user_id`) REFERENCES `users`(`id`) ON DELETE CASCADE,
    FOREIGN KEY (`job_id`) REFERENCES `jobs`(`id`) ON DELETE CASCADE
);

CREATE TABLE `follows` (
    `id` BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    `user_id` BIGINT UNSIGNED,
    `followable_id` BIGINT UNSIGNED,
    `followable_type` VARCHAR(255),
    `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (`user_id`) REFERENCES `users`(`id`) ON DELETE CASCADE
);

CREATE TABLE `posts` (
    `id` BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    `authorable_type` VARCHAR(255),
    `authorable_id` BIGINT UNSIGNED,
    `title` VARCHAR(255),
    `type` ENUM('TEXT', 'IMAGE', 'VIDEO') DEFAULT 'TEXT',
    `content` TEXT,
    `file` VARCHAR(255),
    `public_id` VARCHAR(255),
    `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE `comments` (
    `id` BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    `post_id` BIGINT UNSIGNED,
    `authorable_type` VARCHAR(255),
    `authorable_id` BIGINT UNSIGNED,
    `content` TEXT,
    `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (`post_id`) REFERENCES `posts`(`id`) ON DELETE CASCADE
);

CREATE TABLE `likes` (
    `id` BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    `likeable_type` VARCHAR(255),
    `likeable_id` BIGINT UNSIGNED,
    `authorable_type` VARCHAR(255),
    `authorable_id` BIGINT UNSIGNED,
    `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    UNIQUE KEY `likeable_authorable_unique` (`likeable_id`, `likeable_type`, `authorable_id`, `authorable_type`)
);
